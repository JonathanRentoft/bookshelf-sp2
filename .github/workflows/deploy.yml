name: Build, Test and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: bookshelf_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Opdateret

      - name: Set up JDK 17
        uses: actions/setup-java@v4  # Opdateret
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run tests
        run: mvn test
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: bookshelf_test
          DB_USER: postgres
          DB_PASSWORD: postgres

      - name: Upload artifact
        uses: actions/upload-artifact@v4  # Opdateret
        with:
          name: bookshelf-jar
          path: target/app.jar

  docker-build-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Opdateret

      - name: Download artifact
        uses: actions/download-artifact@v4  # Opdateret
        with:
          name: bookshelf-jar
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # Opdateret

      - name: Log in to Docker Hub
        uses: docker/login-action@v3  # Opdateret
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5  # Opdateret
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bookshelf-api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/bookshelf-api:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/bookshelf-api:buildcache,mode=max

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@v1.0.3  # Opdateret til stabil version
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd /root/bookshelf-api
            docker-compose pull bookshelf-api
            docker-compose up -d bookshelf-api
            docker system prune -f